{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1HaComsgOqeoBU1z5hlDpDii9UOCaAznI","authorship_tag":"ABX9TyNIXsS3vOMxVlbL/kVc9Gkg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"id":"qTWfIomqp8df","executionInfo":{"status":"ok","timestamp":1731091079744,"user_tz":180,"elapsed":785,"user":{"displayName":"Djesser Zechner Sergio","userId":"08438585090191874386"}}},"outputs":[],"source":["import os\n","import pandas as pd\n","import openpyxl\n","from datetime import date\n","import matplotlib.pyplot as plt\n","import matplotlib.ticker as ticker\n","import numpy as np\n","import glob\n","import seaborn as sns"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dcw0D8OS6a8_","executionInfo":{"status":"ok","timestamp":1731091092194,"user_tz":180,"elapsed":12018,"user":{"displayName":"Djesser Zechner Sergio","userId":"08438585090191874386"}},"outputId":"fef6e693-1e22-40b9-fc9c-58537ab20efd"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["def pasta_projeto_func():\n","    # identificando pasta de trabalho\n","    pasta_projeto = '/content/drive/MyDrive/UFSC/PPGEA 2024/Python_for_env/ENS410064/Projeto'\n","    print('Pasta projeto: ', pasta_projeto)\n","    return pasta_projeto\n","\n","def pasta_produtos_func(pasta_projeto):\n","    pasta_produtos = os.path.join(pasta_projeto, 'Dados', 'Produtos')\n","    return pasta_produtos\n","\n","def importar_csv_unico_func(pasta_produtos):\n","    caminho_dados_agua_csv = os.path.join(pasta_produtos, 'dados_agua_df.csv')\n","    dados_agua_df = pd.read_csv(caminho_dados_agua_csv)\n","    dados_agua_df = dados_agua_df.drop(dados_agua_df.iloc[:,0].name,axis = 1)\n","    return dados_agua_df\n","\n","pasta_projeto = pasta_projeto_func()\n","pasta_produtos = pasta_produtos_func(pasta_projeto)\n","dados_agua_df = importar_csv_unico_func(pasta_produtos)\n","dados_agua_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XnFaHfDXq6Gd","executionInfo":{"status":"ok","timestamp":1731091095892,"user_tz":180,"elapsed":1863,"user":{"displayName":"Djesser Zechner Sergio","userId":"08438585090191874386"}},"outputId":"2fdc5029-4657-499a-dd9d-8ed5588f6639"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Pasta projeto:  /content/drive/MyDrive/UFSC/PPGEA 2024/Python_for_env/ENS410064/Projeto\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 11184 entries, 0 to 11183\n","Data columns (total 29 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   CODIGO           11184 non-null  object \n"," 1   CATEGORIA        11184 non-null  object \n"," 2   ANO              11184 non-null  float64\n"," 3   MÊS              11184 non-null  object \n"," 4   MATRICULA        11148 non-null  float64\n"," 5   CAMPUS           9938 non-null   object \n"," 6   N_HIDROMETRO     10082 non-null  object \n"," 7   COD_HIDROMETRO   11184 non-null  object \n"," 8   CONCESSIONARIA   11180 non-null  object \n"," 9   CIDADE           11180 non-null  object \n"," 10  LOCAL            11179 non-null  object \n"," 11  ECON_PUB         10774 non-null  float64\n"," 12  ECON_RES         5798 non-null   object \n"," 13  ECON_COM         6513 non-null   float64\n"," 14  ECON_IND         5864 non-null   float64\n"," 15  ECON_TOTAL       11184 non-null  float64\n"," 16  LEIT_ANT         11059 non-null  object \n"," 17  LEIT_ATUAL       11153 non-null  object \n"," 18  VOLUME_FATURADO  11168 non-null  float64\n"," 19  OCORRENCIA       10281 non-null  object \n"," 20  ANORMALIDADE     5719 non-null   object \n"," 21  VALOR_AGUA       11163 non-null  float64\n"," 22  VALOR_ESGOTO     9524 non-null   float64\n"," 23  DESCONTOS        11019 non-null  float64\n"," 24  OUTROS           6279 non-null   float64\n"," 25  MULTAS_JUROS     7342 non-null   float64\n"," 26  VALOR_TOTAL      11163 non-null  float64\n"," 27  MES_N            11184 non-null  int64  \n"," 28  Dtime            11184 non-null  object \n","dtypes: float64(13), int64(1), object(15)\n","memory usage: 2.5+ MB\n"]}]},{"cell_type":"code","source":["groupby_anos_soma = dados_agua_df.iloc[:,[18,21, 22, 23 ,24 ,25, 26]].groupby(dados_agua_df['ANO']).sum()\n","display(groupby_anos_soma.round(2))\n","groupby_anos_soma.describe().round(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":740},"id":"sLPTxdCG7E93","executionInfo":{"status":"ok","timestamp":1731091101195,"user_tz":180,"elapsed":284,"user":{"displayName":"Djesser Zechner Sergio","userId":"08438585090191874386"}},"outputId":"ab354652-7f74-4406-c41c-68717c1ddb2c"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["        VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS     OUTROS  \\\n","ANO                                                                       \n","2013.0        399689.00  2853769.81    2140482.02 -473011.60       0.00   \n","2014.0        381685.00  2916140.66    2160137.27 -481284.83       0.00   \n","2015.0        424762.00  3509116.50    2556541.15 -576418.92     229.22   \n","2016.0        413896.00  3763534.60    2818958.43 -431515.21   10244.49   \n","2017.0        410132.00  4067488.27    3093897.21 -675949.77   33080.29   \n","2018.0        424491.66  4576319.45    3293931.47 -713484.02  188450.48   \n","2019.0        362614.41  3883324.48    3081085.35 -648955.87  108303.77   \n","2020.0        183841.00  2107155.36    1718506.68 -369524.11      70.88   \n","2021.0        177347.00  2160834.34    1716128.36 -393288.46   -7397.97   \n","2022.0        247128.00  3310370.69    2621609.01 -594878.77    -118.22   \n","2023.0        284444.15  4196376.88    3368482.32 -794049.60   -1597.18   \n","2024.0        216485.17  3547550.04    3191040.32 -663066.86  -12525.38   \n","\n","        MULTAS_JUROS  VALOR_TOTAL  \n","ANO                                \n","2013.0      16485.79   4537726.02  \n","2014.0      18759.65   4613752.75  \n","2015.0      43826.12   5533294.07  \n","2016.0      98031.68   6259253.99  \n","2017.0       7263.93   6525779.93  \n","2018.0      17643.94   7365996.16  \n","2019.0    1300716.04   7724473.77  \n","2020.0       3596.60   3458965.11  \n","2021.0       4950.97   3481226.08  \n","2022.0       -103.78   5336878.99  \n","2023.0      36083.44   6797079.04  \n","2024.0      43815.39   6106813.51  "],"text/html":["\n","  <div id=\"df-24d77b05-0675-4c93-ba69-6ec4149ac3d5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>ANO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2013.0</th>\n","      <td>399689.00</td>\n","      <td>2853769.81</td>\n","      <td>2140482.02</td>\n","      <td>-473011.60</td>\n","      <td>0.00</td>\n","      <td>16485.79</td>\n","      <td>4537726.02</td>\n","    </tr>\n","    <tr>\n","      <th>2014.0</th>\n","      <td>381685.00</td>\n","      <td>2916140.66</td>\n","      <td>2160137.27</td>\n","      <td>-481284.83</td>\n","      <td>0.00</td>\n","      <td>18759.65</td>\n","      <td>4613752.75</td>\n","    </tr>\n","    <tr>\n","      <th>2015.0</th>\n","      <td>424762.00</td>\n","      <td>3509116.50</td>\n","      <td>2556541.15</td>\n","      <td>-576418.92</td>\n","      <td>229.22</td>\n","      <td>43826.12</td>\n","      <td>5533294.07</td>\n","    </tr>\n","    <tr>\n","      <th>2016.0</th>\n","      <td>413896.00</td>\n","      <td>3763534.60</td>\n","      <td>2818958.43</td>\n","      <td>-431515.21</td>\n","      <td>10244.49</td>\n","      <td>98031.68</td>\n","      <td>6259253.99</td>\n","    </tr>\n","    <tr>\n","      <th>2017.0</th>\n","      <td>410132.00</td>\n","      <td>4067488.27</td>\n","      <td>3093897.21</td>\n","      <td>-675949.77</td>\n","      <td>33080.29</td>\n","      <td>7263.93</td>\n","      <td>6525779.93</td>\n","    </tr>\n","    <tr>\n","      <th>2018.0</th>\n","      <td>424491.66</td>\n","      <td>4576319.45</td>\n","      <td>3293931.47</td>\n","      <td>-713484.02</td>\n","      <td>188450.48</td>\n","      <td>17643.94</td>\n","      <td>7365996.16</td>\n","    </tr>\n","    <tr>\n","      <th>2019.0</th>\n","      <td>362614.41</td>\n","      <td>3883324.48</td>\n","      <td>3081085.35</td>\n","      <td>-648955.87</td>\n","      <td>108303.77</td>\n","      <td>1300716.04</td>\n","      <td>7724473.77</td>\n","    </tr>\n","    <tr>\n","      <th>2020.0</th>\n","      <td>183841.00</td>\n","      <td>2107155.36</td>\n","      <td>1718506.68</td>\n","      <td>-369524.11</td>\n","      <td>70.88</td>\n","      <td>3596.60</td>\n","      <td>3458965.11</td>\n","    </tr>\n","    <tr>\n","      <th>2021.0</th>\n","      <td>177347.00</td>\n","      <td>2160834.34</td>\n","      <td>1716128.36</td>\n","      <td>-393288.46</td>\n","      <td>-7397.97</td>\n","      <td>4950.97</td>\n","      <td>3481226.08</td>\n","    </tr>\n","    <tr>\n","      <th>2022.0</th>\n","      <td>247128.00</td>\n","      <td>3310370.69</td>\n","      <td>2621609.01</td>\n","      <td>-594878.77</td>\n","      <td>-118.22</td>\n","      <td>-103.78</td>\n","      <td>5336878.99</td>\n","    </tr>\n","    <tr>\n","      <th>2023.0</th>\n","      <td>284444.15</td>\n","      <td>4196376.88</td>\n","      <td>3368482.32</td>\n","      <td>-794049.60</td>\n","      <td>-1597.18</td>\n","      <td>36083.44</td>\n","      <td>6797079.04</td>\n","    </tr>\n","    <tr>\n","      <th>2024.0</th>\n","      <td>216485.17</td>\n","      <td>3547550.04</td>\n","      <td>3191040.32</td>\n","      <td>-663066.86</td>\n","      <td>-12525.38</td>\n","      <td>43815.39</td>\n","      <td>6106813.51</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24d77b05-0675-4c93-ba69-6ec4149ac3d5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24d77b05-0675-4c93-ba69-6ec4149ac3d5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24d77b05-0675-4c93-ba69-6ec4149ac3d5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dc9e0173-7f2c-4fb5-a602-3b0bdeb82d24\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dc9e0173-7f2c-4fb5-a602-3b0bdeb82d24')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dc9e0173-7f2c-4fb5-a602-3b0bdeb82d24 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"groupby_anos_soma\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"ANO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.605551275463989,\n        \"min\": 2013.0,\n        \"max\": 2024.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          2023.0,\n          2022.0,\n          2013.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98331.74814546932,\n        \"min\": 177347.0,\n        \"max\": 424762.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          284444.15,\n          247128.0,\n          399689.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 775166.6099328307,\n        \"min\": 2107155.36,\n        \"max\": 4576319.45,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          4196376.88,\n          3310370.69,\n          2853769.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 594199.0891875804,\n        \"min\": 1716128.36,\n        \"max\": 3368482.32,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          3368482.32,\n          2621609.01,\n          2140482.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 136644.61883694676,\n        \"min\": -794049.6,\n        \"max\": -369524.11,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          -794049.6,\n          -594878.77,\n          -473011.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 60445.69086080825,\n        \"min\": -12525.38,\n        \"max\": 188450.48,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          108303.77,\n          0.0,\n          -1597.18\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 368865.78143627447,\n        \"min\": -103.78,\n        \"max\": 1300716.04,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          36083.44,\n          -103.78,\n          16485.79\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1408974.0736621902,\n        \"min\": 3458965.11,\n        \"max\": 7724473.77,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          6797079.04,\n          5336878.99,\n          4537726.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["       VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS     OUTROS  \\\n","count            12.00       12.00         12.00      12.00      12.00   \n","mean         327209.62  3407665.09    2646733.30 -567952.34   26561.70   \n","std           98331.75   775166.61     594199.09  136644.62   60445.69   \n","min          177347.00  2107155.36    1716128.36 -794049.60  -12525.38   \n","25%          239467.29  2900547.95    2155223.46 -666287.59    -487.96   \n","50%          372149.70  3528333.27    2720283.72 -585648.84      35.44   \n","75%          411073.00  3929365.43    3118182.99 -462637.50   15953.44   \n","max          424762.00  4576319.45    3368482.32 -369524.11  188450.48   \n","\n","       MULTAS_JUROS  VALOR_TOTAL  \n","count         12.00        12.00  \n","mean      132589.15   5645103.29  \n","std       368865.78   1408974.07  \n","min         -103.78   3458965.11  \n","25%         6685.69   4594746.07  \n","50%        18201.80   5820053.79  \n","75%        43818.07   6593604.71  \n","max      1300716.04   7724473.77  "],"text/html":["\n","  <div id=\"df-0debf683-6249-41e5-8ec0-362f93278222\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>12.00</td>\n","      <td>12.00</td>\n","      <td>12.00</td>\n","      <td>12.00</td>\n","      <td>12.00</td>\n","      <td>12.00</td>\n","      <td>12.00</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>327209.62</td>\n","      <td>3407665.09</td>\n","      <td>2646733.30</td>\n","      <td>-567952.34</td>\n","      <td>26561.70</td>\n","      <td>132589.15</td>\n","      <td>5645103.29</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>98331.75</td>\n","      <td>775166.61</td>\n","      <td>594199.09</td>\n","      <td>136644.62</td>\n","      <td>60445.69</td>\n","      <td>368865.78</td>\n","      <td>1408974.07</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>177347.00</td>\n","      <td>2107155.36</td>\n","      <td>1716128.36</td>\n","      <td>-794049.60</td>\n","      <td>-12525.38</td>\n","      <td>-103.78</td>\n","      <td>3458965.11</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>239467.29</td>\n","      <td>2900547.95</td>\n","      <td>2155223.46</td>\n","      <td>-666287.59</td>\n","      <td>-487.96</td>\n","      <td>6685.69</td>\n","      <td>4594746.07</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>372149.70</td>\n","      <td>3528333.27</td>\n","      <td>2720283.72</td>\n","      <td>-585648.84</td>\n","      <td>35.44</td>\n","      <td>18201.80</td>\n","      <td>5820053.79</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>411073.00</td>\n","      <td>3929365.43</td>\n","      <td>3118182.99</td>\n","      <td>-462637.50</td>\n","      <td>15953.44</td>\n","      <td>43818.07</td>\n","      <td>6593604.71</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>424762.00</td>\n","      <td>4576319.45</td>\n","      <td>3368482.32</td>\n","      <td>-369524.11</td>\n","      <td>188450.48</td>\n","      <td>1300716.04</td>\n","      <td>7724473.77</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0debf683-6249-41e5-8ec0-362f93278222')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0debf683-6249-41e5-8ec0-362f93278222 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0debf683-6249-41e5-8ec0-362f93278222');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8d678a12-dde9-4c97-9868-e3e4c47b461a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8d678a12-dde9-4c97-9868-e3e4c47b461a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8d678a12-dde9-4c97-9868-e3e4c47b461a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"groupby_anos_soma\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 154890.68826338917,\n        \"min\": 12.0,\n        \"max\": 424762.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          327209.62,\n          372149.7,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1585101.3503722758,\n        \"min\": 12.0,\n        \"max\": 4576319.45,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3407665.09,\n          3528333.27,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1202872.4903762366,\n        \"min\": 12.0,\n        \"max\": 3368482.32,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2646733.3,\n          2720283.72,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 325183.39915861643,\n        \"min\": -794049.6,\n        \"max\": 136644.62,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -567952.34,\n          -585648.84,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 66109.15741826565,\n        \"min\": -12525.38,\n        \"max\": 188450.48,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          26561.7,\n          35.44,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 448858.97460891586,\n        \"min\": -103.78,\n        \"max\": 1300716.04,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          132589.15,\n          18201.8,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2636561.6657898864,\n        \"min\": 12.0,\n        \"max\": 7724473.77,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5645103.29,\n          5820053.79,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# volume total de água por ano por hidrômetro\n","# volume total de água por ano\n","dict_groupby_anos_cod_hidrometro = {}\n","for ano in dados_agua_df['ANO'].unique():\n","    groupby_anos_cod_hidrometro = dados_agua_df.iloc[:,[18,21, 22, 23 ,24 ,25, 26]].groupby(dados_agua_df['COD_HIDROMETRO']).sum().round(2)\n","    nome = (f'{ano}')\n","    dict_groupby_anos_cod_hidrometro[nome] = groupby_anos_cod_hidrometro\n","for item in (dict_groupby_anos_cod_hidrometro):\n","    print(f'Ano: {item} ')\n","    display(dict_groupby_anos_cod_hidrometro[item].head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"hGpPL3GJ7O28","executionInfo":{"status":"ok","timestamp":1731091105382,"user_tz":180,"elapsed":615,"user":{"displayName":"Djesser Zechner Sergio","userId":"08438585090191874386"}},"outputId":"3c29dacd-ab15-41d6-a8a5-16233aae7026"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Ano: 2024.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-92c2d49f-459d-4419-aa34-9222c0b6673f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92c2d49f-459d-4419-aa34-9222c0b6673f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-92c2d49f-459d-4419-aa34-9222c0b6673f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-92c2d49f-459d-4419-aa34-9222c0b6673f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-381f881f-db1b-44ac-b0b9-a15de8d131b4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-381f881f-db1b-44ac-b0b9-a15de8d131b4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-381f881f-db1b-44ac-b0b9-a15de8d131b4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2023.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-b63b8e10-50de-499a-aebd-e0652100789d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b63b8e10-50de-499a-aebd-e0652100789d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b63b8e10-50de-499a-aebd-e0652100789d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b63b8e10-50de-499a-aebd-e0652100789d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a6ca0ee7-942e-4e0e-98a7-060c417dc050\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a6ca0ee7-942e-4e0e-98a7-060c417dc050')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a6ca0ee7-942e-4e0e-98a7-060c417dc050 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2022.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-cdb5528f-6ab8-4bab-943d-ac1672d90e64\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cdb5528f-6ab8-4bab-943d-ac1672d90e64')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cdb5528f-6ab8-4bab-943d-ac1672d90e64 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cdb5528f-6ab8-4bab-943d-ac1672d90e64');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-776c45f5-9ac8-41e3-9e08-d58d3de25f33\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-776c45f5-9ac8-41e3-9e08-d58d3de25f33')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-776c45f5-9ac8-41e3-9e08-d58d3de25f33 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2021.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-a5c4754c-0240-46fa-8720-1b65ff921e4e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5c4754c-0240-46fa-8720-1b65ff921e4e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a5c4754c-0240-46fa-8720-1b65ff921e4e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a5c4754c-0240-46fa-8720-1b65ff921e4e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-32168796-f1ad-4f73-ba85-bc116f0cdb3b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32168796-f1ad-4f73-ba85-bc116f0cdb3b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-32168796-f1ad-4f73-ba85-bc116f0cdb3b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2020.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-a4051594-d55d-4b0d-946c-4246aeb4df88\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4051594-d55d-4b0d-946c-4246aeb4df88')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4051594-d55d-4b0d-946c-4246aeb4df88 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4051594-d55d-4b0d-946c-4246aeb4df88');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6ffe8a22-f96c-44d7-92ae-cb9fa3877f8e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ffe8a22-f96c-44d7-92ae-cb9fa3877f8e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6ffe8a22-f96c-44d7-92ae-cb9fa3877f8e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2019.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-9d933c9f-927b-4f3f-863d-98af61238e15\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d933c9f-927b-4f3f-863d-98af61238e15')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d933c9f-927b-4f3f-863d-98af61238e15 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d933c9f-927b-4f3f-863d-98af61238e15');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4503ecb6-0fc9-4977-ab8d-0effa62b60db\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4503ecb6-0fc9-4977-ab8d-0effa62b60db')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4503ecb6-0fc9-4977-ab8d-0effa62b60db button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2018.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-2756107d-7767-43eb-bf64-35b8045ef4f5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2756107d-7767-43eb-bf64-35b8045ef4f5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2756107d-7767-43eb-bf64-35b8045ef4f5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2756107d-7767-43eb-bf64-35b8045ef4f5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b6326352-bbb0-419d-aef9-a3db75bbeb4a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6326352-bbb0-419d-aef9-a3db75bbeb4a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b6326352-bbb0-419d-aef9-a3db75bbeb4a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2017.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-deebd916-12c1-45d1-9a77-d2d256994226\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-deebd916-12c1-45d1-9a77-d2d256994226')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-deebd916-12c1-45d1-9a77-d2d256994226 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-deebd916-12c1-45d1-9a77-d2d256994226');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3d69fd9c-3542-4756-9039-465818964dd3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3d69fd9c-3542-4756-9039-465818964dd3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3d69fd9c-3542-4756-9039-465818964dd3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2016.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-2b6eeebe-df0f-4212-96e3-159e9eec90be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b6eeebe-df0f-4212-96e3-159e9eec90be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2b6eeebe-df0f-4212-96e3-159e9eec90be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2b6eeebe-df0f-4212-96e3-159e9eec90be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e1d0adc9-28ae-4672-a30b-d45717f21e12\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e1d0adc9-28ae-4672-a30b-d45717f21e12')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e1d0adc9-28ae-4672-a30b-d45717f21e12 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2015.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-231e856a-f923-440e-a22f-86599b631ba8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-231e856a-f923-440e-a22f-86599b631ba8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-231e856a-f923-440e-a22f-86599b631ba8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-231e856a-f923-440e-a22f-86599b631ba8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ea5e988c-f54c-4ec7-ab9c-716a908fe2a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ea5e988c-f54c-4ec7-ab9c-716a908fe2a6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ea5e988c-f54c-4ec7-ab9c-716a908fe2a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2014.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-661758c0-4f9e-4877-b60b-ec8d23a30114\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-661758c0-4f9e-4877-b60b-ec8d23a30114')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-661758c0-4f9e-4877-b60b-ec8d23a30114 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-661758c0-4f9e-4877-b60b-ec8d23a30114');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c0c458cb-1c0f-408e-ba3e-b0178c49be4f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c0c458cb-1c0f-408e-ba3e-b0178c49be4f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c0c458cb-1c0f-408e-ba3e-b0178c49be4f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Ano: 2013.0 \n"]},{"output_type":"display_data","data":{"text/plain":["                VOLUME_FATURADO  VALOR_AGUA  VALOR_ESGOTO  DESCONTOS  OUTROS  \\\n","COD_HIDROMETRO                                                                 \n","H001                     4225.0    40147.12       3212.73   -4118.75    3.91   \n","H002                     7353.0    71647.21       5886.98   -7353.80    1.81   \n","H003                    59881.0   625253.31      55473.81  -64622.70   59.98   \n","H004                    10396.0   109976.64      19057.87  -12227.77    0.91   \n","H005                    29523.0   296878.71      12868.50  -30296.76   32.47   \n","\n","                MULTAS_JUROS  VALOR_TOTAL  \n","COD_HIDROMETRO                             \n","H001                  220.40     39465.41  \n","H002                  278.70     70460.90  \n","H003                 3050.73    619215.13  \n","H004                  358.54    117166.19  \n","H005                 1783.33    281266.25  "],"text/html":["\n","  <div id=\"df-3f88f371-8081-41bb-a36e-bb47f801b1d1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>VOLUME_FATURADO</th>\n","      <th>VALOR_AGUA</th>\n","      <th>VALOR_ESGOTO</th>\n","      <th>DESCONTOS</th>\n","      <th>OUTROS</th>\n","      <th>MULTAS_JUROS</th>\n","      <th>VALOR_TOTAL</th>\n","    </tr>\n","    <tr>\n","      <th>COD_HIDROMETRO</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>H001</th>\n","      <td>4225.0</td>\n","      <td>40147.12</td>\n","      <td>3212.73</td>\n","      <td>-4118.75</td>\n","      <td>3.91</td>\n","      <td>220.40</td>\n","      <td>39465.41</td>\n","    </tr>\n","    <tr>\n","      <th>H002</th>\n","      <td>7353.0</td>\n","      <td>71647.21</td>\n","      <td>5886.98</td>\n","      <td>-7353.80</td>\n","      <td>1.81</td>\n","      <td>278.70</td>\n","      <td>70460.90</td>\n","    </tr>\n","    <tr>\n","      <th>H003</th>\n","      <td>59881.0</td>\n","      <td>625253.31</td>\n","      <td>55473.81</td>\n","      <td>-64622.70</td>\n","      <td>59.98</td>\n","      <td>3050.73</td>\n","      <td>619215.13</td>\n","    </tr>\n","    <tr>\n","      <th>H004</th>\n","      <td>10396.0</td>\n","      <td>109976.64</td>\n","      <td>19057.87</td>\n","      <td>-12227.77</td>\n","      <td>0.91</td>\n","      <td>358.54</td>\n","      <td>117166.19</td>\n","    </tr>\n","    <tr>\n","      <th>H005</th>\n","      <td>29523.0</td>\n","      <td>296878.71</td>\n","      <td>12868.50</td>\n","      <td>-30296.76</td>\n","      <td>32.47</td>\n","      <td>1783.33</td>\n","      <td>281266.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f88f371-8081-41bb-a36e-bb47f801b1d1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f88f371-8081-41bb-a36e-bb47f801b1d1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f88f371-8081-41bb-a36e-bb47f801b1d1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab0d8725-7ffd-4e24-a5dd-1ac4c8809a26\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab0d8725-7ffd-4e24-a5dd-1ac4c8809a26')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab0d8725-7ffd-4e24-a5dd-1ac4c8809a26 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    display(dict_groupby_anos_cod_hidrometro[item]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"COD_HIDROMETRO\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"H002\",\n          \"H005\",\n          \"H003\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VOLUME_FATURADO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23218.11772732665,\n        \"min\": 4225.0,\n        \"max\": 59881.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7353.0,\n          29523.0,\n          59881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_AGUA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243010.203130342,\n        \"min\": 40147.12,\n        \"max\": 625253.31,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          71647.21,\n          296878.71,\n          625253.31\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_ESGOTO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21146.37504794781,\n        \"min\": 3212.73,\n        \"max\": 55473.81,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5886.98,\n          12868.5,\n          55473.81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DESCONTOS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25002.086990456017,\n        \"min\": -64622.7,\n        \"max\": -4118.75,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -7353.8,\n          -30296.76,\n          -64622.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OUTROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.018860082640053,\n        \"min\": 0.91,\n        \"max\": 59.98,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.81,\n          32.47,\n          59.98\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MULTAS_JUROS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1251.292374447315,\n        \"min\": 220.4,\n        \"max\": 3050.73,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          278.7,\n          1783.33,\n          3050.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VALOR_TOTAL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 239010.2940945864,\n        \"min\": 39465.41,\n        \"max\": 619215.13,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          70460.9,\n          281266.25,\n          619215.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["def pasta_auxiliar_func(pasta_projeto):\n","    pasta_auxiliar = pasta_projeto +'\\\\'+'Auxiliar'\n","    print('pasta_auxiliar', pasta_auxiliar)\n","    return pasta_auxiliar\n","\n","def pasta_figuras_func(pasta_projeto):\n","    # mudando para pasta de figuras\n","    pasta_figuras = os.path.join(pasta_projeto, 'Figuras')\n","    print('Pasta figuras: ', pasta_figuras)\n","    return pasta_figuras\n","\n","def abrir_imagem_salva_pasta_auxiliar(nome_imagem):\n","    pasta_projeto = pasta_projeto_func()\n","    pasta_auxiliar = pasta_auxiliar_func(pasta_projeto)\n","    from IPython.display import Image\n","    caminho_imagem = pasta_auxiliar +'\\\\'+ nome_imagem\n","    imagem = Image(filename= caminho_imagem)\n","    return imagem\n","\n","def abrir_imagem_salva_pasta_figuras(nome_imagem):\n","    pasta_projeto = pasta_projeto_func()\n","    pasta_figuras = pasta_figuras_func(pasta_projeto)\n","    from IPython.display import Image\n","    caminho_imagem = pasta_figuras +'\\\\'+ nome_imagem\n","    imagem = Image(filename= caminho_imagem)\n","    return imagem\n","\n","def gerar_e_salvar_figuras_groupby_ano_soma(groupby_anos_soma):\n","\n","    pasta_projeto = pasta_projeto_func()\n","\n","    pasta_figuras = pasta_figuras_func(pasta_projeto)\n","\n","    linhas_index_gb = groupby_anos_soma.index\n","    print('linhas_index_gb', linhas_index_gb)\n","    colunas_gb = groupby_anos_soma.columns[[0,-1]]\n","    print('colunas_gb',colunas_gb)\n","    print('nº de colunas', len(colunas_gb))\n","    lista_cores  =   ( 'b',  'r') #https://matplotlib.org/2.0.1/api/colors_api.html\n","    print('lista_cores', lista_cores)\n","    lista_unidades = ('m3', 'R$')\n","    print('lista_unidades', lista_unidades)\n","\n","    fig, axs = plt.subplots(len(colunas_gb),1,figsize = (15, 8))\n","\n","    xticks = np.arange(min(groupby_anos_soma.index),max(groupby_anos_soma.index+1), 1)\n","    os.chdir(pasta_figuras)\n","\n","    for i, item in enumerate (colunas_gb):\n","        coluna = i\n","\n","        try:\n","            nome = groupby_anos_soma.columns[coluna].split('_')\n","            y_label = nome[0] + ' '+ nome [1] + ' ' + lista_unidades[i]\n","        except:\n","            nome = groupby_anos_soma.columns[coluna]\n","            y_label = nome + ' ' + lista_unidades[i]\n","\n","        axs[i].bar(groupby_anos_soma.index, groupby_anos_soma.iloc[:, coluna], color=lista_cores[i], label = y_label)\n","        axs[i].set_ylabel(y_label)\n","        axs[i].set_xlabel(groupby_anos_soma.index.name)\n","        axs[i].set_xticklabels(linhas_index_gb, rotation=45, ha='right')\n","        axs[i].yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(x, ',.2f')))\n","        axs[i].set_xticks(xticks)\n","        axs[i].set_title(y_label)\n","        #handles, labels = ax.get_legend_handles_labels()\n","        #ax.legend(handles, labels)\n","        axs[i].legend()\n","\n","\n","\n","    #fig.title(f'UFSC Dados Água {groupby_anos_soma.index[0]} - {groupby_anos_soma.index[-1]}')\n","    fig.tight_layout()\n","    nome_imagem = f'UFSC Dados Água {groupby_anos_soma.index[0]} - {groupby_anos_soma.index[-1]}'\n","    nome_imagem = nome_imagem + \".png\"\n","    imagem = fig.savefig(nome_imagem, dpi=100)\n","    print(nome_imagem)\n","    os.chdir(pasta_projeto)\n","    plt.show()\n","\n","    return nome_imagem"],"metadata":{"id":"eQ_mtLA97WFg","executionInfo":{"status":"ok","timestamp":1731091141402,"user_tz":180,"elapsed":291,"user":{"displayName":"Djesser Zechner Sergio","userId":"08438585090191874386"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["nome_imagem = gerar_e_salvar_figuras_groupby_ano_soma(groupby_anos_soma)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"mGp1rErK7X0V","executionInfo":{"status":"ok","timestamp":1731091148474,"user_tz":180,"elapsed":1478,"user":{"displayName":"Djesser Zechner Sergio","userId":"08438585090191874386"}},"outputId":"d03d4886-8768-4b34-8df4-8fdf591965fe"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Pasta projeto:  /content/drive/MyDrive/UFSC/PPGEA 2024/Python_for_env/ENS410064/Projeto\n","Pasta figuras:  /content/drive/MyDrive/UFSC/PPGEA 2024/Python_for_env/ENS410064/Projeto/Figuras\n","linhas_index_gb Index([2013.0, 2014.0, 2015.0, 2016.0, 2017.0, 2018.0, 2019.0, 2020.0, 2021.0,\n","       2022.0, 2023.0, 2024.0],\n","      dtype='float64', name='ANO')\n","colunas_gb Index(['VOLUME_FATURADO', 'VALOR_TOTAL'], dtype='object')\n","nº de colunas 2\n","lista_cores ('b', 'r')\n","lista_unidades ('m3', 'R$')\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-13-d567988df068>:62: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.\n","  axs[i].set_xticklabels(linhas_index_gb, rotation=45, ha='right')\n","<ipython-input-13-d567988df068>:62: UserWarning: set_ticklabels() should only be used with a fixed number of ticks, i.e. after set_ticks() or using a FixedLocator.\n","  axs[i].set_xticklabels(linhas_index_gb, rotation=45, ha='right')\n"]},{"output_type":"stream","name":"stdout","text":["UFSC Dados Água 2013.0 - 2024.0.png\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Melt the DataFrame for easier plotting with seaborn\n","groupby_anos_soma_melted = pd.melt(groupby_anos_soma.reset_index(), id_vars=['ANO'], value_vars=groupby_anos_soma.columns)\n","display(groupby_anos_soma_melted)\n","# Create the box plot\n","plt.figure(figsize=(12, 6))  # Adjust figure size as needed\n","sns.boxplot(x='variable', y='value', data=groupby_anos_soma_melted)\n","plt.gca().yaxis.set_major_formatter(ticker.FuncFormatter(lambda x, p: format(int(x), ',')))\n","plt.ylabel('R$ Agregado por ano')\n","plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels if needed\n","plt.title('Box Plot of Grouped Data')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"aA-2wEag7dsv","executionInfo":{"status":"ok","timestamp":1731091157955,"user_tz":180,"elapsed":714,"user":{"displayName":"Djesser Zechner Sergio","userId":"08438585090191874386"}},"outputId":"ca0aa777-82c6-4e7c-ab2b-6e0f50e43686"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["       ANO         variable        value\n","0   2013.0  VOLUME_FATURADO   399689.000\n","1   2014.0  VOLUME_FATURADO   381685.000\n","2   2015.0  VOLUME_FATURADO   424762.000\n","3   2016.0  VOLUME_FATURADO   413896.000\n","4   2017.0  VOLUME_FATURADO   410132.000\n","..     ...              ...          ...\n","79  2020.0      VALOR_TOTAL  3458965.112\n","80  2021.0      VALOR_TOTAL  3481226.083\n","81  2022.0      VALOR_TOTAL  5336878.990\n","82  2023.0      VALOR_TOTAL  6797079.040\n","83  2024.0      VALOR_TOTAL  6106813.510\n","\n","[84 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-02473f9c-7ff4-44e3-8bab-4b1e365502b1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ANO</th>\n","      <th>variable</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013.0</td>\n","      <td>VOLUME_FATURADO</td>\n","      <td>399689.000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2014.0</td>\n","      <td>VOLUME_FATURADO</td>\n","      <td>381685.000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2015.0</td>\n","      <td>VOLUME_FATURADO</td>\n","      <td>424762.000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2016.0</td>\n","      <td>VOLUME_FATURADO</td>\n","      <td>413896.000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2017.0</td>\n","      <td>VOLUME_FATURADO</td>\n","      <td>410132.000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>2020.0</td>\n","      <td>VALOR_TOTAL</td>\n","      <td>3458965.112</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>2021.0</td>\n","      <td>VALOR_TOTAL</td>\n","      <td>3481226.083</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>2022.0</td>\n","      <td>VALOR_TOTAL</td>\n","      <td>5336878.990</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>2023.0</td>\n","      <td>VALOR_TOTAL</td>\n","      <td>6797079.040</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>2024.0</td>\n","      <td>VALOR_TOTAL</td>\n","      <td>6106813.510</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>84 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02473f9c-7ff4-44e3-8bab-4b1e365502b1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-02473f9c-7ff4-44e3-8bab-4b1e365502b1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-02473f9c-7ff4-44e3-8bab-4b1e365502b1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-91d1bd4d-6040-4220-9ca0-5775e4945415\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-91d1bd4d-6040-4220-9ca0-5775e4945415')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-91d1bd4d-6040-4220-9ca0-5775e4945415 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3cdf567d-7c6a-4794-840a-f328b536ce02\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('groupby_anos_soma_melted')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3cdf567d-7c6a-4794-840a-f328b536ce02 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('groupby_anos_soma_melted');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"groupby_anos_soma_melted","summary":"{\n  \"name\": \"groupby_anos_soma_melted\",\n  \"rows\": 84,\n  \"fields\": [\n    {\n      \"column\": \"ANO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.4727857641748394,\n        \"min\": 2013.0,\n        \"max\": 2024.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          2023.0,\n          2022.0,\n          2013.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"variable\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"VOLUME_FATURADO\",\n          \"VALOR_AGUA\",\n          \"MULTAS_JUROS\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2233324.232557487,\n        \"min\": -794049.6,\n        \"max\": 7724473.77,\n        \"num_unique_values\": 83,\n        \"samples\": [\n          3081085.35,\n          399689.0,\n          4196376.88\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}